# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

static_library("libpugixml") {
  sources = [
    "dldt/inference-engine/thirdparty/pugixml/src/pugiconfig.hpp",
    "dldt/inference-engine/thirdparty/pugixml/src/pugixml.cpp",
    "dldt/inference-engine/thirdparty/pugixml/src/pugixml.hpp",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
}

static_library("libade") {
  sources = [
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_descriptor_view.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/check_cycles.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/assert.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_descriptor_ref.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/subgraphs.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/metadata.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/graph.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/topological_sort.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/passes",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/passes/communications.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/node.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_descriptor.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/execution_engine.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/edge.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/search.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/metatypes.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/alloc.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_accessor.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/ade/sources/ade/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
}

static_library("libfluid") {
  sources = [
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/executor/gexecutor.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/executor/gexecutor.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/logger.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/precomp.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcomputation.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gapi_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gproto.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcomputation_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gnode.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gnode.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gapi_priv.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcall_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gbackend.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gbackend_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gscalar.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gproto_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/garray.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gkernel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gmat.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcall.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gnode_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/common/gbackend.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/common/gcompoundbackend.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/common/gcompoundkernel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbuffer_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbackend.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbackend.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc_func.dispatch.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc_func.simd.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidutils.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidcore.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbuffer.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc_func.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/transactions.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gobjref.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodelbuilder.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/kernels.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/meta.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/helpers.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/passes.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/exec.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/helpers.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/islands.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/dump_dot.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiler.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiled_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiled.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gislandmodel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gislandmodel.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiler.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodel.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodelbuilder.hpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/include",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src",
    "dldt/inference-engine/thirdparty/ade/sources/ade/include",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "GAPI_STANDALONE",
    "cv=fluidcv",
  ]
}

shared_library("libinference_engine") {
  sources = [
    "dldt/inference-engine/src/inference_engine/dll_main.hpp",
    "dldt/inference-engine/src/inference_engine/network_serializer.cpp",
    "dldt/inference-engine/src/inference_engine/ie_blob_proxy.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_with_stages.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_infer_async_request_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_executable_network_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_plugin_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_memory_state_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_executor.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_itask_executor.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iinfer_async_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iplugin_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_imemory_state_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iexecutable_network_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iinfer_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/exception2status.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_memory_state_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_executable_network_thread_safe_default.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_plugin_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_async_request_thread_safe_default.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_async_request_thread_safe_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_async_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_executable_network_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_executable_network_thread_safe_async_only.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_synchronizer.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_executor_manager.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_with_stages.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_executor_manager.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_executor.hpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_launcher.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_launcher.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_region_yolo_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_crop_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_pool_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_pad_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_eltwise_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_argmax_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_upsampling_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_detection_output_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_roi_pooling_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_gather_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_gemm_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_reorg_yolo_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_built_in_holder.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_conv_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_proposal_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_built_in_impl.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_interp_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_priorbox_clustered_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_priorbox_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_ctc_greedy_decoder_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_deconv_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_concat_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/impl_register.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_permute_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_split_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_reshape_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_flatten_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_built_in_holder.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_simpler_nms_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_tile_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_inner_product_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_equal_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_resample_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_spatial_transformer_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_psroi_pooling_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshaper.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_io_controllers.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_io_controllers.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshaper.hpp",
    "dldt/inference-engine/src/inference_engine/ie_layouts.cpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_int8_normalizer.cpp",
    "dldt/inference-engine/src/inference_engine/ie_graph_splitter.hpp",
    "dldt/inference-engine/src/inference_engine/file_utils.h",
    "dldt/inference-engine/src/inference_engine/range_iterator.hpp",
    "dldt/inference-engine/src/inference_engine/ie_cnn_net_reader_impl.cpp",
    "dldt/inference-engine/src/inference_engine/blob_transform.hpp",
    "dldt/inference-engine/src/inference_engine/ie_utils.cpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_impl.hpp",
    "dldt/inference-engine/src/inference_engine/parsers.h",
    "dldt/inference-engine/src/inference_engine/ie_context.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layers_internal.hpp",
    "dldt/inference-engine/src/inference_engine/ie_network.cpp",
    "dldt/inference-engine/src/inference_engine/xml_parse_utils.h",
    "dldt/inference-engine/src/inference_engine/ie_util_internal.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_parsers.cpp",
    "dldt/inference-engine/src/inference_engine/net_pass.h",
    "dldt/inference-engine/src/inference_engine/graph_tools.cpp",
    "dldt/inference-engine/src/inference_engine/w_unistd.h",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_data.cpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi_kernels.cpp",
    "dldt/inference-engine/src/inference_engine/ie_network.hpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi_kernels.hpp",
    "dldt/inference-engine/src/inference_engine/ie_layers_internal.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_validators.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_parsers.h",
    "dldt/inference-engine/src/inference_engine/data_stats.h",
    "dldt/inference-engine/src/inference_engine/network_serializer.h",
    "dldt/inference-engine/src/inference_engine/ie_format_parser.h",
    "dldt/inference-engine/src/inference_engine/ie_memcpy.cpp",
    "dldt/inference-engine/src/inference_engine/net_pass.cpp",
    "dldt/inference-engine/src/inference_engine/system_alllocator.hpp",
    "dldt/inference-engine/src/inference_engine/ie_layers_prv.h",
    "dldt/inference-engine/src/inference_engine/graph_tools.hpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_stats_impl.cpp",
    "dldt/inference-engine/src/inference_engine/ie_profiling.hpp",
    "dldt/inference-engine/src/inference_engine/memory_solver.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_detector.cpp",
    "dldt/inference-engine/src/inference_engine/ie_format_parser.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/blob_transform_sse42.hpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_data_sse42.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_gapi_kernels_sse42.hpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/blob_transform_sse42.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_gapi_kernels_sse42.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_data_sse42.hpp",
    "dldt/inference-engine/src/inference_engine/graph_transformer.h",
    "dldt/inference-engine/src/inference_engine/precision_utils.h",
    "dldt/inference-engine/src/inference_engine/layer_transform.hpp",
    "dldt/inference-engine/src/inference_engine/ie_util_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_stats_impl.hpp",
    "dldt/inference-engine/src/inference_engine/ie_memcpy.h",
    "dldt/inference-engine/src/inference_engine/cnn_network_impl.cpp",
    "dldt/inference-engine/src/inference_engine/debug.h",
    "dldt/inference-engine/src/inference_engine/precision_utils.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_detector.hpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_data.hpp",
    "dldt/inference-engine/src/inference_engine/ie_data.cpp",
    "dldt/inference-engine/src/inference_engine/ie_algorithm.hpp",
    "dldt/inference-engine/src/inference_engine/ie_cnn_layer_builder.h",
    "dldt/inference-engine/src/inference_engine/cnn_network_int8_normalizer.hpp",
    "dldt/inference-engine/src/inference_engine/w_dirent.h",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi_kernels_impl.hpp",
    "dldt/inference-engine/src/inference_engine/memory_solver.hpp",
    "dldt/inference-engine/src/inference_engine/graph_transformer.cpp",
    "dldt/inference-engine/src/inference_engine/blob_transform.cpp",
    "dldt/inference-engine/src/inference_engine/file_utils.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_relu6_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_layer_builder.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_power_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_tile_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_reshape_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_permute_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_prelu_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_detection_output_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_eltwise_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_prior_box_clustered_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_region_yolo_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_norm_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_ctc_greedy_decoder_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_fully_connected_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_normalize_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_scale_shift_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_argmax_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_output_layer_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_grn_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_clamp_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_split_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_simpler_nms_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_pooling_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_sigmoid_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_roi_pooling_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_memory_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_softmax_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_layer_fragment.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_batch_normalization_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_relu_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_psroi_pooling_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_deconvolution_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_reorg_yolo_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_mvn_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_prior_box_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_network_builder.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_tanh_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_convolution_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_concat_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_const_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_proposal_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_crop_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_elu_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_input_layer_layer.cpp",
    "dldt/inference-engine/src/inference_engine/ie_device.cpp",
    "dldt/inference-engine/src/inference_engine/system_alllocator.cpp",
    "dldt/inference-engine/src/inference_engine/ie_version.cpp",
    "dldt/inference-engine/src/inference_engine/description_buffer.hpp",
    "dldt/inference-engine/src/inference_engine/ie_cnn_net_reader_impl.h",
    "dldt/inference-engine/src/inference_engine/xml_parse_utils.cpp",
    "dldt/inference-engine/src/inference_engine/ie_graph_splitter.cpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi.cpp",
    "dldt/inference-engine/src/inference_engine/data_stats.cpp",
    "dldt/inference-engine/src/inference_engine/ade_util.hpp",
    "dldt/inference-engine/src/inference_engine/blob_factory.cpp",
    "dldt/inference-engine/src/inference_engine/ade_util.cpp",
    "dldt/inference-engine/src/inference_engine/ie_blob_common.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_validators.hpp",
    "dldt/inference-engine/src/inference_engine/blob_factory.hpp",
  ]
  include_dirs = [
    "dldt/inference-engine/include",
    "dldt/inference-engine/src/inference_engine/",
    "dldt/inference-engine/thirdparty/pugixml/src",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/include",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/",
    "dldt/inference-engine/thirdparty/ocv/",
    "dldt/inference-engine/thirdparty/ade/sources/ade/include",
    "omp/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-Wno-defaulted-function-deleted",
    "-msse4.2",
    "-includetime.h"
  ]
  ldflags = [
    "-Wl,--export-dynamic",
  ]
  defines = [
    "ENABLE_CLDNN=1",
    #"ENABLE_GNA",
    "ENABLE_MKL_DNN=1",
    "ENABLE_MYRIAD=1",
    "GAPI_STANDALONE",
    "HAVE_SSE=1",
    "IE_BUILD_POSTFIX=\"\"",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_API",
    "cv=fluidcv",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
  deps = [
    ":libpugixml",
    ":libade",
    ":libfluid",
  ]
  lib_dirs = [
    "omp/lib/",
  ]
  libs = [
    "iomp5"
  ]
}

static_library("libmkldnn") {
  sources = [
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_thread_parallel_nd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/stream.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/roi_pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_desc.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/batch_normalization_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/engine.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/z_magic.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/eltwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_traits.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/reorder_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/engine.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/math_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_desc.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/query.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory_desc_wrapper.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/format_traits.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/lrn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/nstl.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/softmax_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_attr.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/depthwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/verbose.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/scratchpad.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/rnn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_debug.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/c_types_map.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory_desc_wrapper.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/verbose.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/convolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/deconvolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/stream.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_attr.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/type_helpers.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/rnn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/depthwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/softmax.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/convolution_relu.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/reorder.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/eltwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_iterator.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/inner_product_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/shuffle_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/shuffle.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/event.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/deconvolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_iterator.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/scratchpad.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_thread.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nchw_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_wino_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_deconvolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_concat.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_softmax.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_concat.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_depthwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_winograd_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_1x1_conv_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_concat.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reorder.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_wino_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_concat.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_sum.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_reorder.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_shuffle.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_reorder.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_depthwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_barrier.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_x8s8s32x_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_engine.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ncsp_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution_winograd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reducer.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_generator.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_lrn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_winograd_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_batch_normalization_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reorder_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_inner_product.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_sum.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ncsp_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_transpose_src_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_inner_product.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_rnn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_memory.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_2x3.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_sum.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_shuffle_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_sum.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_q10n.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_x8s8s32x_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_batch_normalization_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pool_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_rnn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_lrn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_softmax_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_sum.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pool_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_roi_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_softmax.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_i8i8_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_depthwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_isa_traits.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_shuffle.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_memory.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_roi_pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_deconvolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_eltwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_primitive_conf.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nchw_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_concat.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reducer.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_i8i8_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nspc_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_i8i8_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pool_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_eltwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_transpose_src_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_eltwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution_winograd.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_depthwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_u8s8s32x_inner_product.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/wino_reorder.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_eltwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_2x3.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_deconvolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_depthwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_barrier.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_reorder_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_rnn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_engine.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_eltwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nhwc_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_u8s8s32x_inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak_bin2hex.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak_mnemonic.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/COPYRIGHT",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak_util.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_primitive.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_convolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_i8i8_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nspc_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pool_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_inner_product_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_deconvolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nhwc_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/os_blas.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/ref_gemm.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx512_common_gemm_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx_gemm_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx512_common_gemm_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx_gemm_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_batch_normalization_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_deconvolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_reorder.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/mkl-dnn/include",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak",
    "omp/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "ENABLE_MKL_DNN=1",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
    "MKLDNN_THR=MKLDNN_THR_OMP",
  ]
}

shared_library("libMKLDNNPlugin") {
  sources = [
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_plugin.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_streams.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_edge.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_utils.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_streams.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_memory.h",
    "dldt/inference-engine/src/mkldnn_plugin/config.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_descriptor.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_utils.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_infer_request.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_optimizer.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_dumper.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_memory.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_mngr.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_optimizer.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_mngr.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_dims.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_descriptor.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_dumper.h",
    "dldt/inference-engine/src/mkldnn_plugin/mean_image.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_edge.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/utils/blob_dump.h",
    "dldt/inference-engine/src/mkldnn_plugin/utils/blob_dump.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_plugin.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_concat_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_pooling_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reshape_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_deconv_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_conv_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_pooling_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_depthwise_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_batchnorm_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reshape_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_softmax_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_fullyconnected_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_gemm_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_memory_node.hpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_generic_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_input_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_gemm_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reorder_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_split_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_depthwise_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_fullyconnected_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_permute_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_memory_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_lrn_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_tile_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_power_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_crop_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_activation_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_eltwise_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_eltwise_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_lrn_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_rnn.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_activation_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_crop_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_generic_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_batchnorm_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_split_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_deconv_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_roi_pooling_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_power_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_tile_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_roi_pooling_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_input_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_rnn.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_permute_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_softmax_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_concat_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reorder_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_conv_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/perf_count.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_async_infer_request.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_infer_request.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/config.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_primitive.h",
    "dldt/inference-engine/src/mkldnn_plugin/mean_image.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_async_infer_request.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/cpu_engine.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/omp_manager.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/iml_type_mapper.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/os/lin/lin_omp_manager.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/os/lin/lin_omp_manager.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/omp_manager.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/iml_type_mapper.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/cpu_prim_tensor.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/cpu_prim_layer.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/desc_iterator.hpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_primitive.cpp",
    "cxa_thread_atexit.cc",
  ]
  include_dirs = [
    "dldt/inference-engine/include",
    "dldt/inference-engine/src/inference_engine/",
    "dldt/inference-engine/src/mkldnn_plugin/",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn",
    "dldt/inference-engine/thirdparty/mkl-dnn/include",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/",
    "omp/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-Wno-defaulted-function-deleted",
    "-Wno-unused-lambda-capture",
    "-msse4.2",
  ]
  ldflags = [
    "-Wl,--export-dynamic",
  ]
  defines = [
    "ENABLE_MKL_DNN=1",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
    "MKLDNN_THR=MKLDNN_THR_OMP",
  ]
  deps = [
    ":libinference_engine",
    ":libmkldnn",
  ]
  lib_dirs = [
    "omp/lib/",
  ]
  libs = [
    "iomp5"
  ]
}

action("primitive_db_gen") {
  script = "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/primitive_db_gen.py"
  inputs = [
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/softmax_gpu_items_class_optimized.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_winograd_6x3_s1_fused.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lstm_elt_gpu_bfyx_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/activation_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_from_winograd_2x3_s1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/average_unpooling_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_gpu_across_channel_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_image_tutorial.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_byxf_padding_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/embed_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_byxf_af32_depthwise.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_grad_weights_3x3.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_fs_bs_yx_bsv4_fsv32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bs_f_bsv8_af8_vload.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_average_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/normalize_gpu_across_spatial_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_fb_io_b8_f8_vload.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/scale_grad_weights_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/softmax_gpu_fb.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_1x1_hgemm_buf_16x1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/mvn_gpu_ref_within_channels.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_int8_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_within_channel_byxf_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_gemm_like_fp32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/region_yolo_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_yxfb_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_grad_weights_1x1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/softmax_loss_grad_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_fb_io_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/concatenation_gpu_depth_bfyx_no_pitch.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/arg_max_min_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/arg_max_min_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_direct_10_12_16.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_weights_winograd_6x3_s1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/activation_tutorial.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/mvn_gpu_ref_accross_channels.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_grad_input_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_tutorial.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_data.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_weights_image_winograd_6x3_s1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_data_fast_b1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bs_f_bsv16_b1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/vec_typedefs.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/include_all.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/mmad.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/sub_group.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/data_types.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/common.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/gemm_common.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/reshape_dims.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/include/fetch.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/max_unpooling_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_3x3_dw_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_weights.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_os_iyx_osv16.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_grad_weights_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_gpu_across_channel_multiple_features.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_byxf_af32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bs_f_bsv16_af8_vload.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/permute_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/select_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_byxf_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_winograd_2x3_s1_fused.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_yxfb_yxio_b1_block_multiple_x_fp32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lookup_table_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_weights_winograd_2x3_s1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/deconvolution_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lookup_table_axis.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/tile_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_mmad_blocks.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lstm_gemm_gpu_bfyx_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_gpu_across_channel_yxfb_b8_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/activation_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_bfyx_block_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_grad_weights_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_gpu_within_channel.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/broadcast_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/arg_max_min_axis.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_to_winograd_2x3_s1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/border_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_1x1_gemm_mmad.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_direct_8_8_16.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/softmax_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_1x1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_yxfb_yxio_b8_fp32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bf_io_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/mvn_gpu_bfyx_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_mmad.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_yxfb_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_fb_io_block_fp16.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/index_select_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/lrn_gpu_within_channel_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_weights_image_2d_c4_fyx_b.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_mmad_batched.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_grad_weights_7x7.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/roi_pooling_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_MMAD.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/pooling_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/normalize_gpu_within_spatial_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_fb_oi_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/batch_norm_grad_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_gemm_like_fp16.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reshape_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/batch_norm_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_winograd_2x3_s1.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/eltwise_simple_vload8.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/gemm_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_fb_io_b8_f8.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorder_data_to_yxfb_batched.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_mmad_batched.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bfyx_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_fb_oi_b8_fp32_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_yxfb_yxio_b16_fp32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/eltwise_fs_bs_yx_bsv4_fsv32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bf_io_gemm.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/fully_connected_gpu_bf_io_input_spatial.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_depthwise_weights_lwg.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/upsampling_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_yxfb_yxio_b16_fp16.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/deconvolution_gpu_bfyx_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_yxfb_yxio_b1_block_fp32.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/generic_eltwise_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_gpu_bfyx_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/softmax_gpu_bf.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/concatenation_gpu_ref.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/convolution_grad_weights_yxfb.cl",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels/reorg_yolo_gpu_ref.cl",
  ]

  outputs = [
    "$target_gen_dir/ks_primitive_db.inc",
  ]
  args = [
    "-out_path",
    rebase_path("$target_gen_dir", root_build_dir),
    "-out_file_name",
    "ks_primitive_db.inc",
    "-kernels",
    rebase_path("dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cl_kernels", root_build_dir),
  ]
}

source_set("cldnn_kernel_selector") {
  sources = [
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/common/tensor_type.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/common/common_types.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/common/common_tools.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/common/tensor_type.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector_params.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_APL.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e_B32_B64.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2_B8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_GT3.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2_B1_B16.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e_B1_B16.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_GT3_B1.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT4e_B8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_SKL_GT2_B32_B64.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_ICL.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/cache/cache_ICL_B1_B16.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/training_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/common_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/kernel_selector_utils.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/primitive_db.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/weight_bias_params.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/training_params.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/common_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/primitive_db_gen.py",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/weight_bias_params.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/jitter.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/training_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/training_params.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/primitive_db.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/weight_bias_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/jitter.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/weight_bias_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/kernel_selector_utils.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_runner_interface.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/auto_tuner.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector_common.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/auto_tuner_offline.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/auto_tuner.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector_params.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/kernel_selector_common.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_yxfb.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_7x7.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_1x1.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_yxfb.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_3x3.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_7x7.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_1x1.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_3x3.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution_grad_weights/convolution_grad_weights_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_params.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/embed/embed_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_axis.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_gpu_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_axis.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_gpu_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/arg_max_min/arg_max_min_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_gpu_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/max_unpooling/max_unpooling_kernel_gpu_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm/batch_norm_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/permute/permute_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/permute/permute_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/permute/permute_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/permute/permute_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_within_spatial_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_within_spatial_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_across_spatial_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/normalize/normalize_kernel_across_spatial_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b16.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_1x1.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b1_block_multiple_x.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_params.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_byxf_af32_depthwise.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b8.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_direct_10_12_16.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_MMAD.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_tutorial.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_6x3_s1_fused.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_params.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_mmad_batched.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_1x1_gemm_buf.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_1x1_gemm_buf.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_os_iyx_osv16.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_mmad_batched.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b1_block.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_MMAD_blocks.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_2x3_s1_fused.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_depthwise_weights_lwg.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_depthwise_weights_lwg.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_2x3_s1.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_3x3_dw_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_1x1_gemm_MMAD.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_gemm_like.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_tutorial.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_byxf_af32_depthwise.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_6x3_s1_fused.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_gemm_like.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_os_iyx_osv16.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_1x1.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b1_block.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_direct_10_12_16.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_1x1_gemm_MMAD.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_MMAD.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_bfyx_3x3_dw_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_MMAD_blocks.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b16.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_2x3_s1.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_winograd_2x3_s1_fused.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/convolution/convolution_kernel_yxfb_yxio_b1_block_multiple_x.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_depth_bfyx_no_pitch.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_depth_bfyx_no_pitch.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/concatenation/concatenation_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_axis.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_axis.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lookup_table/lookup_table_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/roi_pooling/roi_pooling_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/roi_pooling/roi_pooling_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/roi_pooling/roi_pooling_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/roi_pooling/roi_pooling_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorg_yolo/reorg_yolo_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorg_yolo/reorg_yolo_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorg_yolo/reorg_yolo_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorg_yolo/reorg_yolo_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/select/select_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/upsampling/upsampling_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_bfyx_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/mvn/mvn_kernel_bfyx_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax_loss_grad/softmax_loss_grad_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/index_select/index_select_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/tile/tile_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/tile/tile_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/tile/tile_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/tile/tile_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_elt_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lstm/lstm_gemm_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_gpu_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_gpu_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/average_unpooling/average_unpooling_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_average_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_fs_bs_yx_bsv4_fsv32.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_int8_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_af32.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_bfyx_block_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_int8_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_bfyx_block_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_af32.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_average_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_fs_bs_yx_bsv4_fsv32.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_padding_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/pooling/pooling_kernel_gpu_byxf_padding_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/broadcast/broadcast_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_multiple_features.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_multiple_features.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_opt_b8.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_across_channel_opt_b8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_ref_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_byxf_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_ref_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/lrn/lrn_kernel_within_channel_byxf_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_bfyx_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/deconvolution/deconvolution_kernel_bfyx_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/border/border_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_to_yxfb_batched.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_to_yxfb_batched.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_image_fyx_b_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_from_winograd_2x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_winograd_6x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_fast_b1.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_from_winograd_2x3_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_image_fyx_b_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_fast_b1.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_winograd_6x3_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_to_winograd_2x3_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_image_winograd_6x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_image_winograd_6x3_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_winograd_2x3_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_to_winograd_2x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_winograd_2x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reorder/reorder_weights_kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_items_class_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_items_class_optimized.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_fb.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_items_class_optimized.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_bf.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_bf.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_items_class_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_fb.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/softmax/softmax_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reshape/reshape_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reshape/reshape_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reshape/reshape_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/reshape/reshape_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_input/fully_connected_grad_input_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected_grad_weights/fully_connected_grad_weights_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv8_af8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bfyx_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv16_b1.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_image_tutorial.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_block.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_block_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_MMAD.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_mmad_batched.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_image_tutorial.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv16_af8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_oi_b8_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_input_spatial.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_params.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_oi_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_block.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_mmad_batched.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_oi_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_b8_f8.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_MMAD.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_oi_b8_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_gemm.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv8_af8.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_yxfb_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_b8_f8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_params.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_fb_io_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv16_af8.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_block_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_gemm.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bf_io_input_spatial.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bfyx_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_bs_f_bsv16_b1.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/fully_connected/fully_connected_kernel_yxfb_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/region_yolo/region_yolo_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/region_yolo/region_yolo_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/region_yolo/region_yolo_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/region_yolo/region_yolo_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/scale_grad_weights/scale_grad_weights_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_opt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_opt.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_tutorial.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/activation/activation_kernel_tutorial.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/gemm/gemm_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_fs_bs_yx_bsv4_fsv32.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_fs_bs_yx_bsv4_fsv32.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_vload8.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/eltwise/eltwise_kernel_vload8.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_base.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_ref.h",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_ref.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/batch_norm_grad/batch_norm_grad_kernel_selector.cpp",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/auto_tuner_offline.h",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/clDNN/src/include",
    "dldt/inference-engine/thirdparty/clDNN",
    "dldt/inference-engine/thirdparty/clDNN/src/",
    "dldt/inference-engine/thirdparty/clDNN/src/caps/public/",
    "dldt/inference-engine/thirdparty/clDNN/common/khronos_ocl_clhpp/",
    "dldt/inference-engine/thirdparty/clDNN/common/intel_ocl_icd/6.3/linux/include/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/common/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/",
    "$target_gen_dir",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-unused-lambda-capture",
    "-Wno-unused-comparison",
    "-Wno-overloaded-virtual",
    "-Wno-missing-braces",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "NDEBUG",
    "CLDNN_EXPORTS",
    "CLDNN_VERSION_BUILD=14",
    "CLDNN_VERSION_MAJOR=1",
    "CLDNN_VERSION_MINOR=4",
    "CLDNN_VERSION_REVISION=0",
    "ENABLE_CLDNN=1",
  ]
  deps = [ ":primitive_db_gen" ]
}

static_library("libcldnn") {
  sources = [
    "dldt/inference-engine/thirdparty/clDNN/src/pooling.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/convolution_grad_weights.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/lstm_gemm.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/split.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/program_node.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/half.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/reshape.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/generic_layer.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/select.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/broadcast.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/lookup_table.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/scale_grad_input.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/concatenation.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/cldnn.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/crop.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/convolution.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/scale.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/mutable_data.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/embed.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/engine.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/index_select.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/input_layout.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/tile.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/proposal.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/include/broadcast_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/primitive_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/internal_primitive.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/to_string_utils.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/custom_gpu_primitive_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/sliding_window_utils.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/event_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/fully_connected_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/lstm_gemm_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/generic_layer.hpp",
    "dldt/inference-engine/thirdparty/clDNN/src/include/apply_adam_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/meta_utils.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/activation_grad_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/internal_primitive_type_base.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/batch_norm_grad_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/region_yolo_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/generic_layer_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/lrn_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/concatenation_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/api_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/arg_max_min_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/scale_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/normalize_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/layout_optimizer.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/activation_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/scale_grad_weights_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/implementation_map.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/border_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/max_unpooling_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/split_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/reorder_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/detection_output_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/generic_layer.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/proposal_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/memory_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/network_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/batch_norm_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/gemm_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/convolution_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/eltwise_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/primitive_type_base.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/constants_propagator.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/scale_grad_input_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/program_node.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/mutable_data_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/engine_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/fully_connected_grad_input_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/json_object.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/embed_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/permute_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/tile_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/lstm_elt_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/roi_pooling_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/upsampling_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/primitive_type.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/prior_box_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/refcounted_obj.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/deconvolution_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/crop_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/fully_connected_grad_weights_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/index_select_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/reshape_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/kernel_selector_helper.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/average_unpooling_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/select_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/xml_object.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/reorg_yolo_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/program_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/topology_impl.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/data_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/softmax_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/input_layout_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/memory_pool.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/program_dump_graph.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/lookup_table_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/math_utils.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/convolution_grad_weights_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/lstm_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/mvn_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/error_handler.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/softmax_loss_grad_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/include/pooling_inst.h",
    "dldt/inference-engine/thirdparty/clDNN/src/custom_gpu_primitive.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/layout_optimizer.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/region_yolo.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/error_handler.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/kernel_selector_helper.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/lrn.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/program_dump_graph.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/gemm_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/push_pop_map.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/primitive_gpu_base.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/cache/kernels/pooling_gpu_bfyx_average_opt.cl",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/cache/common_types.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/cache/manager_types.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/cache/cache_types.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/generic_layer_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/proposal_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/ocl_user_event.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/scale_grad_input_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/permute_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/concatenation_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kd_selector.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/events_waiter.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/fully_connected_grad_input_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/border_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/reorder_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/memory_gpu.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/activation_grad_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/average_unpooling_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/lrn_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/lstm_elt_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/reshape_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/pooling_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/select_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/convolution_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kernels_cache.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/batch_norm_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/lstm_gemm_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/eltwise_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/tile_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/arg_max_min_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/crop_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/engine_info.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/primitive_gpu_base.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/wait_for_events_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/region_yolo_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/lookup_table_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/reorg_yolo_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/ocl_base_event.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/max_unpooling_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/deconvolution_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/scale_grad_weights_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/fully_connected_grad_weights_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kernels_cache.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/definitions.cl",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/index_select_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/ocl_base_event.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kernel_runner.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kernel_runner.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/batch_norm_grad_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/softmax_loss_grad_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/configuration.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/detection_output_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/roi_pooling_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/memory_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/scale_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/mvn_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/custom_gpu_primitive_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/mutable_data_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/normalize_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kernel.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/kernel.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/convolution_grad_weights_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/upsampling_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/ocl_toolkit.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/fully_connected_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/ocl_toolkit.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/apply_adam_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/activation_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/broadcast_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/softmax_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/ocl_user_event.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/engine_info.h",
    "dldt/inference-engine/thirdparty/clDNN/src/gpu/embed_gpu.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/upsampling.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/prior_box.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/activation_grad.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/constants_propagator.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/event.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/program.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/average_unpooling.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/activation.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/normalize.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/data.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/batch_norm_grad.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/deconvolution.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/lstm.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/gemm.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/mvn.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/fully_connected_grad_weights.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/apply_adam.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/fully_connected.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/lstm_elt.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/reorg_yolo.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/softmax.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/primitive_inst.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/caps",
    "dldt/inference-engine/thirdparty/clDNN/src/caps/public",
    "dldt/inference-engine/thirdparty/clDNN/src/caps/public/gpu_devices.inc",
    "dldt/inference-engine/thirdparty/clDNN/src/caps/public/mode.inc",
    "dldt/inference-engine/thirdparty/clDNN/src/caps/public/gpu_enums.inc",
    "dldt/inference-engine/thirdparty/clDNN/src/detection_output.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/reorder.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/eltwise.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/softmax_loss_grad.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/arg_max_min.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/border.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/batch_norm.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/max_unpooling.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/fully_connected_grad_input.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/scale_grad_weights.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/permute.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/memory_pool.cpp",
    "dldt/inference-engine/thirdparty/clDNN/src/network.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/clDNN/src/include",
    "dldt/inference-engine/thirdparty/clDNN",
    "dldt/inference-engine/thirdparty/clDNN/src/",
    "dldt/inference-engine/thirdparty/clDNN/src/caps/public/",
    "dldt/inference-engine/thirdparty/clDNN/common/khronos_ocl_clhpp/",
    "dldt/inference-engine/thirdparty/clDNN/common/intel_ocl_icd/6.3/linux/include/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/common/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/common/",
    "dldt/inference-engine/thirdparty/clDNN/kernel_selector/core/actual_kernels/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-unused-lambda-capture",
    "-Wno-unused-comparison",
    "-Wno-overloaded-virtual",
    "-Wno-missing-braces",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "NDEBUG",
    "CLDNN_EXPORTS",
    "CLDNN_VERSION_BUILD=14",
    "CLDNN_VERSION_MAJOR=1",
    "CLDNN_VERSION_MINOR=4",
    "CLDNN_VERSION_REVISION=0",
    "ENABLE_CLDNN=1",
  ]
  deps = [ ":cldnn_kernel_selector" ]
}

shared_library("libclDNNPlugin") {
  sources = [
    "dldt/inference-engine/src/cldnn_engine/simple_math.h",
    "dldt/inference-engine/src/cldnn_engine/cldnn_infer_request.cpp",
    "dldt/inference-engine/src/cldnn_engine/cldnn_infer_request.h",
    "dldt/inference-engine/src/cldnn_engine/dllmain.cpp",
    "dldt/inference-engine/src/cldnn_engine/cldnn_graph.h",
    "dldt/inference-engine/src/cldnn_engine/cldnn_custom_layer.cpp",
    "dldt/inference-engine/src/cldnn_engine/simple_math.cpp",
    "dldt/inference-engine/src/cldnn_engine/debug_options.cpp",
    "dldt/inference-engine/src/cldnn_engine/cldnn_engine.cpp",
    "dldt/inference-engine/src/cldnn_engine/cldnn_graph.cpp",
    "dldt/inference-engine/src/cldnn_engine/cldnn_engine.h",
    "dldt/inference-engine/src/cldnn_engine/cldnn_custom_layer.h",
    "dldt/inference-engine/src/cldnn_engine/debug_options.h",
    "cxa_thread_atexit.cc",
  ]
  include_dirs = [
    "dldt/inference-engine/include",
    "dldt/inference-engine/src/inference_engine/",
    "dldt/inference-engine/thirdparty/clDNN/api",
    "dldt/inference-engine/thirdparty/pugixml/src/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-missing-braces",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-Wno-defaulted-function-deleted",
    "-Wno-unused-lambda-capture",
    "-msse4.2",
  ]
  ldflags = [
    "-Wl,--export-dynamic",
  ]
  defines = [
    "ENABLE_CLDNN=1",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
  deps = [
    ":libinference_engine",
    ":libcldnn",
    ":libpugixml",
  ]
  lib_dirs = [
    "dldt/inference-engine/thirdparty/clDNN/common/intel_ocl_icd/6.3/linux/Release/bin/x64/",
  ]
  libs = [
    "OpenCL",
  ]
}

source_set("libgraph_transformer_hw") {
  sources = [
    "dldt/inference-engine/src/vpu/graph_transformer/hw/pooling.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/split_large_convolution.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/common.hpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/convolution.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/try_hcw_layout.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/fc.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/fill_descriptors.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/swap_concat_and_pool.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/common.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/split_depth_convolution.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/split_hw_descriptors.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/hw/inject_sw.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/include/",
    "dldt/inference-engine/src/inference_engine",
    "dldt/inference-engine/src/vpu/graph_transformer/",
    "dldt/inference-engine/src/vpu/common/",
    "dldt/inference-engine/thirdparty/pugixml/src/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-potentially-evaluated-expression",
    "-Wno-unused-lambda-capture",
    "-Wno-defaulted-function-deleted",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "ENABLE_VPU",
    "ENABLE_MYRIAD",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
}
static_library("libgraph_transformer") {
  sources = [
    "dldt/inference-engine/src/vpu/graph_transformer/simple_math.h",
    "dldt/inference-engine/src/vpu/graph_transformer/network_config.hpp",
    "dldt/inference-engine/src/vpu/graph_transformer/mv_blob_format.h",
    "dldt/inference-engine/src/vpu/graph_transformer/graph_transformer_impl.hpp",
    "dldt/inference-engine/src/vpu/graph_transformer/custom_layer.h",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/pooling.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/split.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/interp.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/custom.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/clamp.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/reshape.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/grn.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/none.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/power.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/crop.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/convolution.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/scale.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/fc.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/relu.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/tile.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/proposal.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/concat.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/elu.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/roipooling.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/psroipooling.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/flatten.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/region_yolo.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/sigmoid.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/prelu.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/normalize.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/deconvolution.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/norm.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/mvn.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/priorbox_clustered.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/reorg_yolo.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/softmax.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/detection_output.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/eltwise.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/priorbox.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/batch_norm.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/bias.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/copy.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/permute.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/tanh.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/stages/ctc_decoder.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/graph_transformer.hpp",
    "dldt/inference-engine/src/vpu/graph_transformer/network_config.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/ir/in_out_convert.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/ir/pre_process.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/ir/parse_network.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/ir/parse_data.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/simple_math.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/mv_common.h",
    "dldt/inference-engine/src/vpu/graph_transformer/custom_layer.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/graph_transformer_impl.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/optimizations/eliminate_reshape.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/optimizations/convert_order.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/optimizations/adjust_data_scale.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/optimizations/eliminate_copy.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/optimizations/allocate_resources.cpp",
    "dldt/inference-engine/src/vpu/graph_transformer/optimizations/pack_postops.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/include/",
    "dldt/inference-engine/src/inference_engine",
    "dldt/inference-engine/src/vpu/graph_transformer/",
    "dldt/inference-engine/src/vpu/common/",
    "dldt/inference-engine/thirdparty/pugixml/src/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-switch",
    "-Wno-potentially-evaluated-expression",
    "-Wno-unused-lambda-capture",
    "-Wno-defaulted-function-deleted",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "ENABLE_VPU",
    "ENABLE_MYRIAD",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
  deps = [":libgraph_transformer_hw"]
}

static_library("libvpu_common") {
  sources = [
    "dldt/inference-engine/src/vpu/common/vpu_plugin_config_private.hpp",
    "dldt/inference-engine/src/vpu/common/environment.h",
    "dldt/inference-engine/src/vpu/common/GraphInfo.h",
    "dldt/inference-engine/src/vpu/common/parsed_config.h",
    "dldt/inference-engine/src/vpu/common/IExecutor.h",
    "dldt/inference-engine/src/vpu/common/vpu_logger.h",
    "dldt/inference-engine/src/vpu/common/parsed_config.cpp",
    "dldt/inference-engine/src/vpu/common/vpu_logger.cpp",
    "dldt/inference-engine/src/vpu/common/common.h",
  ]
  include_dirs = [
    "dldt/inference-engine/include/",
    "dldt/inference-engine/src/inference_engine",
    "dldt/inference-engine/src/vpu/graph_transformer/",
    "dldt/inference-engine/src/vpu/common/",
    "dldt/inference-engine/thirdparty/pugixml/src/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-potentially-evaluated-expression",
    "-Wno-unused-lambda-capture",
    "-Wno-defaulted-function-deleted",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "ENABLE_VPU",
    "ENABLE_MYRIAD",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
}

static_library("libmvnc") {
  sources = [
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLinkPublicDefines.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLinkVersion.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLink.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLinkDispatcher.c",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLink.c",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLinkPrivateDefines.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/UsbLinkPlatform.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/XLinkDispatcher.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/pc/usb_boot.h",
    "dldt/inference-engine/thirdparty/movidius/XLink/pc/usb_boot.c",
    "dldt/inference-engine/thirdparty/movidius/XLink/pc/UsbLinkPlatform.c",
    "dldt/inference-engine/thirdparty/movidius/shared/include/mvLog.h",
    "dldt/inference-engine/thirdparty/movidius/shared/include/mvMacros.h",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include/mvnc_ext.h",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include/fp16.h",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include/ncPrivateTypes.h",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include/mvnc.h",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include/ncCommPrivate.h",
    "dldt/inference-engine/thirdparty/movidius/mvnc/src/fp16.c",
    "dldt/inference-engine/thirdparty/movidius/mvnc/src/mvnc_api.c",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/movidius/XLink/shared/",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include/",
    "dldt/inference-engine/thirdparty/movidius/shared/include/",
    "libusb",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_c = [
    "-Wno-enum-conversion",
    "-Wno-implicit-function-declaration",
    "-Wno-missing-braces",
    "-Wno-macro-redefined",
    "-Wno-potentially-evaluated-expression",
    "-Wno-unused-lambda-capture",
    "-Wno-defaulted-function-deleted",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "ENABLE_MYRIAD=1",
    "ENABLE_OBJECT_DETECTION_TESTS=1",
    "ENABLE_SEGMENTATION_TESTS=1",
    "HAVE_STRUCT_TIMESPEC",
    "DEVICE_SHELL_ENABLED",
    "USE_USB_VSC",
    "_CRT_SECURE_NO_WARNINGS",
    "__PC__",
  ]
}

shared_library("libmyriadPlugin") {
  sources = [
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_async_infer_request.cpp",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_plugin.h",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_infer_request.h",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_plugin.cpp",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_executor.cpp",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_executable_network.h",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_async_infer_request.h",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_executor.h",
    "dldt/inference-engine/src/vpu/myriad_plugin/myriad_infer_request.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/src/inference_engine",
    "dldt/inference-engine/thirdparty/movidius/mvnc/include",
    "dldt/inference-engine/include",
    "dldt/inference-engine/src/vpu/common",
    "dldt/inference-engine/src/vpu/graph_transformer",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-switch",
    "-Wno-inconsistent-missing-override",
    "-Wno-missing-braces",
    "-Wno-potentially-evaluated-expression",
    "-Wno-unused-lambda-capture",
    "-Wno-defaulted-function-deleted",
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  ldflags = [
    "-Wl,--export-dynamic",
  ]
  defines = [
    "ENABLE_VPU",
    "ENABLE_MYRIAD",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
  deps = [
    ":libinference_engine",
    ":libgraph_transformer",
    ":libvpu_common",
    ":libmvnc",
    ":libpugixml",
    ":copy_vpu_firmware",
  ]
  lib_dirs = [
    "libusb",
  ]
  libs = [
    "usb-1.0"
  ]
}

copy("copy_vpu_firmware") {
  sources = [
    "dldt/inference-engine/temp/vpu/firmware/ma2480/mvnc/MvNCAPI-ma2480.mvcmd",
    "dldt/inference-engine/temp/vpu/firmware/ma2450/mvnc/MvNCAPI-ma2450.mvcmd",
  ]
  outputs = [
    "$root_out_dir/mvnc/{{source_file_part}}",
  ]
}