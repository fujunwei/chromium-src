# Copyright 2019 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

static_library("libpugixml") {
  sources = [
    "dldt/inference-engine/thirdparty/pugixml/src/pugiconfig.hpp",
    "dldt/inference-engine/thirdparty/pugixml/src/pugixml.cpp",
    "dldt/inference-engine/thirdparty/pugixml/src/pugixml.hpp",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
}

static_library("libade") {
  sources = [
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_descriptor_view.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/check_cycles.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/assert.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_descriptor_ref.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/subgraphs.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/metadata.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/graph.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/topological_sort.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/passes",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/passes/communications.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/node.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_descriptor.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/execution_engine.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/edge.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/search.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/metatypes.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/alloc.cpp",
    "dldt/inference-engine/thirdparty/ade/sources/ade/source/memory_accessor.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/ade/sources/ade/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
}

static_library("libfluid") {
  sources = [
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/executor/gexecutor.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/executor/gexecutor.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/logger.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/precomp.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcomputation.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gapi_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gproto.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcomputation_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gnode.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gnode.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gapi_priv.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcall_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gbackend.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gbackend_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gscalar.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gproto_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/garray.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gkernel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gmat.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gcall.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/api/gnode_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/common/gbackend.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/common/gcompoundbackend.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/common/gcompoundkernel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbuffer_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbackend.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbackend.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc_func.dispatch.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc_func.simd.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidutils.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidcore.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidbuffer.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/backends/fluid/gfluidimgproc_func.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/transactions.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gobjref.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodelbuilder.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/kernels.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/meta.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/helpers.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/passes.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/exec.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/helpers.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/islands.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/passes/dump_dot.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiler.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiled_priv.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiled.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gislandmodel.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gislandmodel.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gcompiler.cpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodel.hpp",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src/compiler/gmodelbuilder.hpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/include",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/src",
    "dldt/inference-engine/thirdparty/ade/sources/ade/include",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "GAPI_STANDALONE",
    "cv=fluidcv",
  ]
}

shared_library("libinference_engine") {
  sources = [
    "dldt/inference-engine/src/inference_engine/dll_main.hpp",
    "dldt/inference-engine/src/inference_engine/network_serializer.cpp",
    "dldt/inference-engine/src/inference_engine/ie_blob_proxy.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_with_stages.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_infer_async_request_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_executable_network_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_plugin_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/base/ie_memory_state_base.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_executor.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_itask_executor.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iinfer_async_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iplugin_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_imemory_state_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iexecutable_network_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/interface/ie_iinfer_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/exception2status.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_memory_state_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_executable_network_thread_safe_default.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_plugin_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_async_request_thread_safe_default.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_async_request_thread_safe_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_infer_async_request_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_executable_network_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/impl/ie_executable_network_thread_safe_async_only.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_synchronizer.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_executor_manager.hpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_with_stages.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_executor_manager.cpp",
    "dldt/inference-engine/src/inference_engine/cpp_interfaces/ie_task_executor.hpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_launcher.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_launcher.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_region_yolo_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_crop_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_pool_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_pad_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_eltwise_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_argmax_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_upsampling_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_detection_output_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_roi_pooling_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_gather_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_gemm_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_reorg_yolo_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_built_in_holder.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_conv_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_proposal_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_built_in_impl.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_interp_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_priorbox_clustered_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_priorbox_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_ctc_greedy_decoder_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_deconv_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_concat_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/impl_register.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_permute_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_split_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_reshape_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_flatten_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_built_in_holder.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_simpler_nms_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_tile_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_inner_product_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_equal_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_resample_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_spatial_transformer_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/built-in/ie_psroi_pooling_shape_infer.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshaper.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_io_controllers.hpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshape_io_controllers.cpp",
    "dldt/inference-engine/src/inference_engine/shape_infer/ie_reshaper.hpp",
    "dldt/inference-engine/src/inference_engine/ie_layouts.cpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_int8_normalizer.cpp",
    "dldt/inference-engine/src/inference_engine/ie_graph_splitter.hpp",
    "dldt/inference-engine/src/inference_engine/file_utils.h",
    "dldt/inference-engine/src/inference_engine/range_iterator.hpp",
    "dldt/inference-engine/src/inference_engine/ie_cnn_net_reader_impl.cpp",
    "dldt/inference-engine/src/inference_engine/blob_transform.hpp",
    "dldt/inference-engine/src/inference_engine/ie_utils.cpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_impl.hpp",
    "dldt/inference-engine/src/inference_engine/parsers.h",
    "dldt/inference-engine/src/inference_engine/ie_context.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layers_internal.hpp",
    "dldt/inference-engine/src/inference_engine/ie_network.cpp",
    "dldt/inference-engine/src/inference_engine/xml_parse_utils.h",
    "dldt/inference-engine/src/inference_engine/ie_util_internal.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_parsers.cpp",
    "dldt/inference-engine/src/inference_engine/net_pass.h",
    "dldt/inference-engine/src/inference_engine/graph_tools.cpp",
    "dldt/inference-engine/src/inference_engine/w_unistd.h",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_data.cpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi_kernels.cpp",
    "dldt/inference-engine/src/inference_engine/ie_network.hpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi_kernels.hpp",
    "dldt/inference-engine/src/inference_engine/ie_layers_internal.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_validators.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_parsers.h",
    "dldt/inference-engine/src/inference_engine/data_stats.h",
    "dldt/inference-engine/src/inference_engine/network_serializer.h",
    "dldt/inference-engine/src/inference_engine/ie_format_parser.h",
    "dldt/inference-engine/src/inference_engine/ie_memcpy.cpp",
    "dldt/inference-engine/src/inference_engine/net_pass.cpp",
    "dldt/inference-engine/src/inference_engine/system_alllocator.hpp",
    "dldt/inference-engine/src/inference_engine/ie_layers_prv.h",
    "dldt/inference-engine/src/inference_engine/graph_tools.hpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_stats_impl.cpp",
    "dldt/inference-engine/src/inference_engine/ie_profiling.hpp",
    "dldt/inference-engine/src/inference_engine/memory_solver.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_detector.cpp",
    "dldt/inference-engine/src/inference_engine/ie_format_parser.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/blob_transform_sse42.hpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_data_sse42.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_gapi_kernels_sse42.hpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/blob_transform_sse42.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_gapi_kernels_sse42.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/ie_preprocess_data_sse42.hpp",
    "dldt/inference-engine/src/inference_engine/graph_transformer.h",
    "dldt/inference-engine/src/inference_engine/precision_utils.h",
    "dldt/inference-engine/src/inference_engine/layer_transform.hpp",
    "dldt/inference-engine/src/inference_engine/ie_util_internal.hpp",
    "dldt/inference-engine/src/inference_engine/cnn_network_stats_impl.hpp",
    "dldt/inference-engine/src/inference_engine/ie_memcpy.h",
    "dldt/inference-engine/src/inference_engine/cnn_network_impl.cpp",
    "dldt/inference-engine/src/inference_engine/debug.h",
    "dldt/inference-engine/src/inference_engine/precision_utils.cpp",
    "dldt/inference-engine/src/inference_engine/cpu_detector.hpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_data.hpp",
    "dldt/inference-engine/src/inference_engine/ie_data.cpp",
    "dldt/inference-engine/src/inference_engine/ie_algorithm.hpp",
    "dldt/inference-engine/src/inference_engine/ie_cnn_layer_builder.h",
    "dldt/inference-engine/src/inference_engine/cnn_network_int8_normalizer.hpp",
    "dldt/inference-engine/src/inference_engine/w_dirent.h",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi_kernels_impl.hpp",
    "dldt/inference-engine/src/inference_engine/memory_solver.hpp",
    "dldt/inference-engine/src/inference_engine/graph_transformer.cpp",
    "dldt/inference-engine/src/inference_engine/blob_transform.cpp",
    "dldt/inference-engine/src/inference_engine/file_utils.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_relu6_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_layer_builder.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_power_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_tile_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_reshape_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_permute_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_prelu_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_detection_output_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_eltwise_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_prior_box_clustered_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_region_yolo_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_norm_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_ctc_greedy_decoder_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_fully_connected_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_normalize_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_scale_shift_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_argmax_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_output_layer_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_grn_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_clamp_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_split_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_simpler_nms_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_pooling_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_sigmoid_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_roi_pooling_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_memory_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_softmax_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_layer_fragment.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_batch_normalization_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_relu_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_psroi_pooling_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_deconvolution_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_reorg_yolo_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_mvn_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_prior_box_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_network_builder.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_tanh_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_convolution_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_concat_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_const_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_proposal_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_crop_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_elu_layer.cpp",
    "dldt/inference-engine/src/inference_engine/builders/ie_input_layer_layer.cpp",
    "dldt/inference-engine/src/inference_engine/ie_device.cpp",
    "dldt/inference-engine/src/inference_engine/system_alllocator.cpp",
    "dldt/inference-engine/src/inference_engine/ie_version.cpp",
    "dldt/inference-engine/src/inference_engine/description_buffer.hpp",
    "dldt/inference-engine/src/inference_engine/ie_cnn_net_reader_impl.h",
    "dldt/inference-engine/src/inference_engine/xml_parse_utils.cpp",
    "dldt/inference-engine/src/inference_engine/ie_graph_splitter.cpp",
    "dldt/inference-engine/src/inference_engine/ie_preprocess_gapi.cpp",
    "dldt/inference-engine/src/inference_engine/data_stats.cpp",
    "dldt/inference-engine/src/inference_engine/ade_util.hpp",
    "dldt/inference-engine/src/inference_engine/blob_factory.cpp",
    "dldt/inference-engine/src/inference_engine/ade_util.cpp",
    "dldt/inference-engine/src/inference_engine/ie_blob_common.cpp",
    "dldt/inference-engine/src/inference_engine/ie_layer_validators.hpp",
    "dldt/inference-engine/src/inference_engine/blob_factory.hpp",
  ]
  include_dirs = [
    "dldt/inference-engine/include",
    "dldt/inference-engine/src/inference_engine/",
    "dldt/inference-engine/thirdparty/pugixml/src",
    "dldt/inference-engine/thirdparty/fluid/modules/gapi/include",
    "dldt/inference-engine/src/inference_engine/cpu_x86_sse42/",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/",
    "dldt/inference-engine/thirdparty/ocv/",
    "dldt/inference-engine/thirdparty/ade/sources/ade/include",
    "omp/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-Wno-defaulted-function-deleted",
    "-msse4.2",
    "-includetime.h"
  ]
  ldflags = [
    "-Wl,--export-dynamic",
  ]
  defines = [
    #"ENABLE_CLDNN=1",
    #"ENABLE_GNA",
    "ENABLE_MKL_DNN=1",
    "GAPI_STANDALONE",
    "HAVE_SSE=1",
    "IE_BUILD_POSTFIX=\"\"",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_API",
    "cv=fluidcv",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
  ]
  deps = [
    ":libpugixml",
    ":libade",
    ":libfluid",
  ]
  lib_dirs = [
    "omp/lib/",
  ]
  libs = [
    "iomp5"
  ]
}

static_library("libmkldnn") {
  sources = [
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_thread_parallel_nd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/stream.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/roi_pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_desc.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/batch_normalization_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/engine.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/z_magic.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/eltwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_traits.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/reorder_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/engine.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/math_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_desc.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/query.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory_desc_wrapper.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/format_traits.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/lrn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/nstl.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/softmax_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_attr.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/depthwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/verbose.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/scratchpad.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/rnn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_debug.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/c_types_map.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/memory_desc_wrapper.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/verbose.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/convolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/deconvolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/stream.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_attr.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/type_helpers.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/rnn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/depthwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/softmax.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/convolution_relu.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/reorder.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/eltwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_iterator.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/inner_product_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/shuffle_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/shuffle.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/event.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/deconvolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/primitive_iterator.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/scratchpad.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/mkldnn_thread.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nchw_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_wino_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_deconvolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_concat.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_softmax.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_concat.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_depthwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_winograd_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_1x1_conv_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_concat.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reorder.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_wino_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_concat.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_sum.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_reorder.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_shuffle.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_reorder.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_depthwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_barrier.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_x8s8s32x_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_engine.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ncsp_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution_winograd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reducer.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_generator.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_lrn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_winograd_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_batch_normalization_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reorder_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_inner_product.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_sum.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ncsp_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_transpose_src_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_inner_product.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_rnn_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_memory.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_2x3.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_sum.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_shuffle_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_sum.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/simple_q10n.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_x8s8s32x_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_batch_normalization_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_1x1_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pool_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_rnn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_lrn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_softmax_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_sum.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_pool_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_roi_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_softmax.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_i8i8_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_depthwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_isa_traits.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_shuffle.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_memory.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_roi_pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_deconvolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_eltwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_primitive_conf.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nchw_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_4x3.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_concat.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_reducer.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_i8i8_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_pooling_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nspc_batch_normalization.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_i8i8_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pool_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_eltwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_1x1_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_transpose_src_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_eltwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution_winograd.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_depthwise.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_u8s8s32x_inner_product.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/wino_reorder.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_conv_kernel.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_eltwise.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_fp32_wino_conv_2x3.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_deconvolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_depthwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_lrn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_barrier.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_reorder_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_lrn_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_rnn.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_engine.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_eltwise_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nhwc_pooling.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm_u8s8s32x_inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_dw_conv_kernel.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx2_1x1_conv_kernel_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak_bin2hex.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak_mnemonic.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/COPYRIGHT",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak/xbyak_util.h",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_primitive.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_dw_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_sse42_conv_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_convolution_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_i8i8_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_inner_product.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nspc_batch_normalization.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_roi_pool_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_softmax_kernel_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_x8s8s32x_convolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_common_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_inner_product_pd.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/ref_deconvolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/nhwc_pooling.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_x8s8s32x_1x1_convolution.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/os_blas.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/ref_gemm.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx512_common_gemm_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm_utils.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx_gemm_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx512_common_gemm_f32.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/jit_avx_gemm_f32.cpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/gemm/gemm_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/cpu_batch_normalization_utils.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_avx512_core_u8s8s32x_deconvolution.hpp",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/jit_uni_reorder.cpp",
  ]
  include_dirs = [
    "dldt/inference-engine/thirdparty/mkl-dnn/include",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/cpu/xbyak",
    "omp/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-msse4.2",
  ]
  defines = [
    "ENABLE_MKL_DNN=1",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
    "MKLDNN_THR=MKLDNN_THR_OMP",
  ]
}

shared_library("libMKLDNNPlugin") {
  sources = [
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_plugin.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_streams.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_edge.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_utils.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_streams.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_memory.h",
    "dldt/inference-engine/src/mkldnn_plugin/config.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_descriptor.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_utils.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_infer_request.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_optimizer.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_dumper.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_memory.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_mngr.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_optimizer.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_extension_mngr.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_dims.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_descriptor.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_graph_dumper.h",
    "dldt/inference-engine/src/mkldnn_plugin/mean_image.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_edge.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/utils/blob_dump.h",
    "dldt/inference-engine/src/mkldnn_plugin/utils/blob_dump.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_plugin.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_concat_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_pooling_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reshape_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_deconv_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_conv_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_pooling_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_depthwise_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_batchnorm_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reshape_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_softmax_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_fullyconnected_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_gemm_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_memory_node.hpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_generic_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_input_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_gemm_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reorder_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_split_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_depthwise_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_fullyconnected_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_permute_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_memory_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_lrn_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_tile_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_power_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_crop_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_activation_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_eltwise_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_eltwise_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_lrn_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_rnn.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_activation_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_crop_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_generic_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_batchnorm_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_split_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_deconv_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_roi_pooling_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_power_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_tile_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_roi_pooling_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_input_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_rnn.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_permute_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_softmax_node.h",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_concat_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_reorder_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/nodes/mkldnn_conv_node.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/perf_count.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_async_infer_request.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_infer_request.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/config.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_primitive.h",
    "dldt/inference-engine/src/mkldnn_plugin/mean_image.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_async_infer_request.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/cpu_engine.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/omp_manager.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/iml_type_mapper.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/os/lin/lin_omp_manager.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/os/lin/lin_omp_manager.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/omp_manager.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/iml_type_mapper.cpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/cpu_prim_tensor.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/cpu_prim_layer.h",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn/desc_iterator.hpp",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn_primitive.cpp",
    "cxa_thread_atexit.cc",
  ]
  include_dirs = [
    "dldt/inference-engine/include",
    "dldt/inference-engine/src/inference_engine/",
    "dldt/inference-engine/src/mkldnn_plugin/",
    "dldt/inference-engine/src/mkldnn_plugin/mkldnn",
    "dldt/inference-engine/thirdparty/mkl-dnn/include",
    "dldt/inference-engine/thirdparty/mkl-dnn/src/common/",
    "omp/include/",
  ]
  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]
  configs -= [ "//build/config/compiler:no_rtti" ]
  configs += [ "//build/config/compiler:rtti" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
  configs += [ "//build/config/gcc:symbol_visibility_default" ]
  cflags_cc = [
    "-Wno-pessimizing-move",
    "-Wno-delete-non-virtual-dtor",
    "-Wno-unused-function",
    "-Wno-reorder",
    "-Wno-unused-private-field",
    "-Wno-string-conversion",
    "-Wno-header-hygiene",
    "-Wno-unused-local-typedef",
    "-Wno-defaulted-function-deleted",
    "-Wno-unused-lambda-capture",
    "-msse4.2",
  ]
  ldflags = [
    "-Wl,--export-dynamic",
  ]
  defines = [
    "ENABLE_MKL_DNN=1",
    "IE_THREAD=IE_THREAD_OMP",
    "IMPLEMENT_INFERENCE_ENGINE_PLUGIN",
    "CI_BUILD_NUMBER=\"custom_2018_17e66dc5a6631d630da454506902bd7c25d4170b\"",
    "MKLDNN_THR=MKLDNN_THR_OMP",
  ]
  deps = [
    ":libinference_engine",
    ":libmkldnn",
  ]
  lib_dirs = [
    "omp/lib/",
  ]
  libs = [
    "iomp5"
  ]
}
